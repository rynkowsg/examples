{:min-bb-version "0.4.3"
 :paths          ["scripts"]
 :tasks          {:requires     ([bb-helper :refer [print-exec]]
                                 [clojure.string :refer [join]])
                  ; COMMON
                  ; TODO: try to replace print-exec by using :enter and (current-task)
                  deps          (print-exec '(clojure "-M:antq -m antq.core") *command-line-args*)
                  deps-upgrade  (shell "bb deps --upgrade")
                  format        (print-exec '(clojure "-M:cljfmt -m cljfmt.main"
                                               "--indentation"
                                               "--remove-surrounding-whitespace"
                                               "--remove-trailing-whitespace"
                                               "--insert-missing-whitespace"
                                               "--remove-consecutive-blank-lines") *command-line-args*)
                  format-check  (shell "bb cljfmt check app/dev/src app/main/src app/test/src app/repl/src")
                  format-fix    (shell "bb cljfmt fix app/dev/src app/main/src app/test/src app/repl/src")
                  lint          (print-exec '(clojure "-M:dev:test:clj-kondo --lint app/main --lint app/test"))
                  log           (print-exec '(shell "tail -F logs/dev.log"))
                  pom           (print-exec '(clojure "-Spom"))
                  test          (print-exec '(clojure "-M:dev:test -m kaocha.runner --config-file tests.edn") *command-line-args*)
                  test-coverage (shell "bb test --plugin kaocha.plugin/cloverage")
                  test-profiler (shell "bb test --plugin kaocha.plugin/profiling")
                  ; COMPILATION / EXECUTION / REPL
                  local-repl    (print-exec '(clojure "-M:dev:prod:test:rebel"))
                  run           (print-exec '(clojure "-M -m example.main") *command-line-args*)
                  capsule       (print-exec '(clojure "-M:pack -m mach.pack.alpha.capsule target/example-capsule.jar --application-id example --application-version \"1.0\" -m example.main"))
                  capsule:run   (print-exec '(shell "java -XX:-OmitStackTraceInFastThrow -jar target/example-capsule.jar"))}}
